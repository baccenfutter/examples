// Code generated by goa v3.0.9, DO NOT EDIT.
//
// upload client
//
// Command:
// $ goa gen goa.design/examples/upload/design

package upload

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "upload" service client.
type Client struct {
	UploadEndpoint   goa.Endpoint
	DownloadEndpoint goa.Endpoint
}

// NewClient initializes a "upload" service client given the endpoints.
func NewClient(upload, download goa.Endpoint) *Client {
	return &Client{
		UploadEndpoint:   upload,
		DownloadEndpoint: download,
	}
}

// Upload calls the "upload" endpoint of the "upload" service.
func (c *Client) Upload(ctx context.Context, p []byte) (res string, err error) {
	var ires interface{}
	ires, err = c.UploadEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(string), nil
}

// Download calls the "download" endpoint of the "upload" service.
func (c *Client) Download(ctx context.Context, p string) (res []byte, err error) {
	var ires interface{}
	ires, err = c.DownloadEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.([]byte), nil
}
